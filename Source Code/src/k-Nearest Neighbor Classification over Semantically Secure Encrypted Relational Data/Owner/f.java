QWJzdHJhY3SXUmVjZW50bHksIHdpcmVsZXNzIHNlbnNvciBuZXR3b3JrcyAoV1NOcykgaGF2ZQpiZWVuIGRlcGxveWVkIGZvciBhIHdpZGUgdmFyaWV0eSBvZiBhcHBsaWNhdGlvbnMsIGluY2x1ZGluZwptaWxpdGFyeSBzZW5zaW5nIGFuZCB0cmFja2luZywgcGF0aWVudCBzdGF0dXMgbW9uaXRvcmluZywgdHJhZmZpYwpmbG93IG1vbml0b3JpbmcsIHdoZXJlIHNlbnNvcnkgZGV2aWNlcyBvZnRlbiBtb3ZlIGJldHdlZW4KZGlmZmVyZW50IGxvY2F0aW9ucy4gU2VjdXJpbmcgZGF0YSBhbmQgY29tbXVuaWNhdGlvbnMgcmVxdWlyZXMKc3VpdGFibGUgZW5jcnlwdGlvbiBrZXkgcHJvdG9jb2xzLiBJbiB0aGlzIHBhcGVyLCB3ZSBwcm9wb3NlIGEKY2VydGlmaWNhdGVsZXNzLWVmZmVjdGl2ZSBrZXkgbWFuYWdlbWVudCAoQ0wtRUtNKSBwcm90b2NvbCBmb3IKc2VjdXJlIGNvbW11bmljYXRpb24gaW4gZHluYW1pYyBXU05zIGNoYXJhY3Rlcml6ZWQgYnkgbm9kZQptb2JpbGl0eS4gVGhlIENMLUVLTSBzdXBwb3J0cyBlZmZpY2llbnQga2V5IHVwZGF0ZXMgd2hlbiBhCm5vZGUgbGVhdmVzIG9yIGpvaW5zIGEgY2x1c3RlciBhbmQgZW5zdXJlcyBmb3J3YXJkIGFuZCBiYWNrd2FyZAprZXkgc2VjcmVjeS4gVGhlIHByb3RvY29sIGFsc28gc3VwcG9ydHMgZWZmaWNpZW50IGtleSByZXZvY2F0aW9uCmZvciBjb21wcm9taXNlZCBub2RlcyBhbmQgbWluaW1pemVzIHRoZSBpbXBhY3Qgb2YgYSBub2RlCmNvbXByb21pc2Ugb24gdGhlIHNlY3VyaXR5IG9mIG90aGVyIGNvbW11bmljYXRpb24gbGlua3MuCkEgc2VjdXJpdHkgYW5hbHlzaXMgb2Ygb3VyIHNjaGVtZSBzaG93cyB0aGF0IG91ciBwcm90b2NvbCBpcyBlZmZlY3RpdmUKaW4gZGVmZW5kaW5nIGFnYWluc3QgdmFyaW91cyBhdHRhY2tzLldlIGltcGxlbWVudCBDTC1FS00KaW4gQ29udGlraSBPUyBhbmQgc2ltdWxhdGUgaXQgdXNpbmcgQ29vamEgc2ltdWxhdG9yIHRvIGFzc2VzcyBpdHMKdGltZSwgZW5lcmd5LCBjb21tdW5pY2F0aW9uLCBhbmQgbWVtb3J5IHBlcmZvcm1hbmNlLgpJbmRleCBUZXJtc5dXaXJlbGVzcyBzZW5zb3IgbmV0d29ya3MsIGNlcnRpZmljYXRlbGVzcyBwdWJsaWMKa2V5IGNyeXB0b2dyYXBoeSwga2V5IG1hbmFnZW1lbnQgc2NoZW1lLkkuIElOVFJPRFVDVElPTgpEWU5BTUlDIHdpcmVsZXNzIHNlbnNvciBuZXR3b3JrcyAoV1NOcyksIHdoaWNoCmVuYWJsZSBtb2JpbGl0eSBvZiBzZW5zb3Igbm9kZXMsIGZhY2lsaXRhdGUgd2lkZXIgbmV0d29yawpjb3ZlcmFnZSBhbmQgbW9yZSBhY2N1cmF0ZSBzZXJ2aWNlIHRoYW4gc3RhdGljIFdTTnMuIFRoZXJlZm9yZSwKZHluYW1pYyBXU05zIGFyZSBiZWluZyByYXBpZGx5IGFkb3B0ZWQgaW4gbW9uaXRvcmluZwphcHBsaWNhdGlvbnMsIHN1Y2ggYXMgdGFyZ2V0IHRyYWNraW5nIGluIGJhdHRsZWZpZWxkIHN1cnZlaWxsYW5jZSwKaGVhbHRoY2FyZSBzeXN0ZW1zLCB0cmFmZmljIGZsb3cgYW5kIHZlaGljbGUgc3RhdHVzIG1vbml0b3JpbmcsCmRhaXJ5IGNhdHRsZSBoZWFsdGggbW9uaXRvcmluZyBbOV0uIEhvd2V2ZXIsIHNlbnNvciBkZXZpY2VzCmFyZSB2dWxuZXJhYmxlIHRvIG1hbGljaW91cyBhdHRhY2tzIHN1Y2ggYXMgaW1wZXJzb25hdGlvbiwKaW50ZXJjZXB0aW9uLCBjYXB0dXJlIG9yIHBoeXNpY2FsIGRlc3RydWN0aW9uLCBkdWUgdG8gdGhlaXIKdW5hdHRlbmRlZCBvcGVyYXRpdmUgZW52aXJvbm1lbnRzIGFuZCBsYXBzZXMgb2YgY29ubmVjdGl2aXR5CmluIHdpcmVsZXNzIGNvbW11bmljYXRpb24gWzIwXS4gVGh1cywgc2VjdXJpdHkgaXMgb25lIG9mCnRoZSBtb3N0IGltcG9ydGFudCBpc3N1ZXMgaW4gbWFueSBjcml0aWNhbCBkeW5hbWljIFdTTgphcHBsaWNhdGlvbnMuIER5bmFtaWNXU05zIHRodXMgbmVlZCB0byBhZGRyZXNzIGtleSBzZWN1cml0eQpyZXF1aXJlbWVudHMsIHN1Y2ggYXMgbm9kZSBhdXRoZW50aWNhdGlvbiwgZGF0YSBjb25maWRlbnRpYWxpdHkKYW5kIGludGVncml0eSwgd2hlbmV2ZXIgYW5kIHdoZXJldmVyIHRoZSBub2RlcyBtb3ZlLgpUbyBhZGRyZXNzIHNlY3VyaXR5LCBlbmNyeXB0aW9uIGtleSBtYW5hZ2VtZW50IHByb3RvY29scwpmb3IgZHluYW1pYyBXU05zIGhhdmUgYmVlbiBwcm9wb3NlZCBpbiB0aGUgcGFzdCBiYXNlZApNYW51c2NyaXB0IHJlY2VpdmVkIEF1Z3VzdCA2LCAyMDE0OyByZXZpc2VkIE9jdG9iZXIgMTcsIDIwMTQ7IGFjY2VwdGVkCk5vdmVtYmVyIDE4LCAyMDE0LiBEYXRlIG9mIHB1YmxpY2F0aW9uIERlY2VtYmVyIDQsIDIwMTQ7IGRhdGUgb2YgY3VycmVudAp2ZXJzaW9uIEphbnVhcnkgMTMsIDIwMTUuIFRoaXMgd29yayB3YXMgc3VwcG9ydGVkIGluIHBhcnQgYnkgdGhlIEJyYWluCktvcmVhIDIxIFBsdXMgUHJvamVjdC4gVGhlIGFzc29jaWF0ZSBlZGl0b3IgY29vcmRpbmF0aW5nIHRoZSByZXZpZXcgb2YgdGhpcwptYW51c2NyaXB0IGFuZCBhcHByb3ZpbmcgaXQgZm9yIHB1YmxpY2F0aW9uIHdhcyBQcm9mLiBLdWkgUS4gUmVuLgpTLi1ILiBTZW8gaXMgd2l0aCB0aGUgQ2VudGVyIGZvciBJbmZvcm1hdGlvbiBTZWN1cml0eSBUZWNobm9sb2dpZXMsIEtvcmVhClVuaXZlcnNpdHksIFNlb3VsIDEzNi03MDEsIEtvcmVhIChlLW1haWw6IHNlb3NoNzdAZ21haWwuY29tKS4KSi4gV29uLCBTLiBTdWx0YW5hLCBhbmQgRS4gQmVydGlubyBhcmUgd2l0aCB0aGUgRGVwYXJ0bWVudCBvZgpDb21wdXRlciBTY2llbmNlLCBQdXJkdWUgVW5pdmVyc2l0eSwgV2VzdCBMYWZheWV0dGUsIElOIDQ3OTA3IFVTQQooZS1tYWlsOiB3b24xMkBwdXJkdWUuZWR1OyBzc3VsdGFuYUBwdXJkdWUuZWR1OyBiZXJ0aW5vQHB1cmR1ZS5lZHUpLgpDb2xvciB2ZXJzaW9ucyBvZiBvbmUgb3IgbW9yZSBvZiB0aGUgZmlndXJlcyBpbiB0aGlzIHBhcGVyIGFyZSBhdmFpbGFibGUKb25saW5lIGF0IGh0dHA6Ly9pZWVleHBsb3JlLmllZWUub3JnLgpEaWdpdGFsIE9iamVjdCBJZGVudGlmaWVyIDEwLjExMDkvVElGUy4yMDE0LjIzNzU1NTUK